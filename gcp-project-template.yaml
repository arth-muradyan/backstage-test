apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: gcp-project-creation
  title: Create GCP Project
  description: This template creates a GCP project using Terraform.
  tags:
    - terraform
    - gcp
spec:
  owner: users
  type: service
  parameters:
    - title: Project Information
      properties:
        project_id:
          title: Project ID
          description: Enter a unique GCP Project ID.
          type: string
        project_name:
          title: Project Name
          description: Enter the name of your GCP Project.
          type: string
        organization_id:
          title: Organization ID
          description: GCP Organization ID.
          type: string
        billing_account:
          title: Billing Account
          description: GCP Billing Account.
          type: string
        service_account_key:
          title: Service Account Key (JSON)
          description: Paste the full JSON key for your GCP service account.
          type: string
          format: password
      required:
        - project_id
        - project_name
        - organization_id
        - billing_account
        - service_account_key

  steps:
    - id: write-terraform-files
      name: Write Terraform Files
      action: scaffolder:execute
      input:
        command: |
          echo "Writing Terraform configuration files..."
          cat <<EOF > main.tf
          provider "google" {
            credentials = file("service-account-key.json")
            project     = "${{ parameters.project_id }}"
            region      = "us-central1"
          }

          resource "google_project" "default" {
            name           = "${{ parameters.project_name }}"
            project_id     = "${{ parameters.project_id }}"
            org_id         = "${{ parameters.organization_id }}"
            billing_account = "${{ parameters.billing_account }}"
          }
          EOF

          echo "Writing variables file..."
          cat <<EOF > variables.tf
          variable "project_id" {}
          variable "project_name" {}
          variable "organization_id" {}
          variable "billing_account" {}
          EOF

          echo "Saving service account key..."
          echo '${{ parameters.service_account_key }}' > service-account-key.json
          echo "Terraform configuration files and service account key written successfully."

    - id: terraform-init
      name: Initialize Terraform
      action: scaffolder:execute
      input:
        command: |
          echo "Initializing Terraform..."
          terraform init

    - id: terraform-apply
      name: Apply Terraform Configuration
      action: scaffolder:execute
      input:
        command: |
          echo "Applying Terraform configuration..."
          terraform apply -auto-approve

    - id: cleanup
      name: Clean Up
      action: scaffolder:execute
      input:
        command: |
          echo "Cleaning up temporary files..."
          rm -f main.tf variables.tf service-account-key.json
          echo "Cleanup complete."
